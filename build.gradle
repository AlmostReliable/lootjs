buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = mod_version
group = 'com.github.llytho'
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '-mixin.config=lootjs.mixins.json', '-Dmixin.debug=true'

            mods {
                lootjs {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '-mixin.config=lootjs.mixins.json'

            mods {
                lootjs {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'lootjs', '--all', '--output', file('src/generated/resources/'), '--existing',
                    file('src/main/resources/')

            mods {
                lootjs {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "Progwml6 (Just Enough Items)"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup "me.shedaniel"
        }
    }

    maven {
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}


dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    implementation fg.deobf("curse.maven:kubejs-238086:${kubejs_fileid}")
//    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("me.shedaniel:architectury-forge:${architectury_version}")

    // Mods with some global loots
    runtimeOnly fg.deobf("curse.maven:simplefarming-327554:3400041")
    runtimeOnly fg.deobf("curse.maven:silentlib-3235738:3235738")
    runtimeOnly fg.deobf("curse.maven:scalinghealth-248027:3240365")
    runtimeOnly fg.deobf("curse.maven:patchouli-306770:3459118")
    runtimeOnly fg.deobf("curse.maven:mysticalworld-282940:3377210")
    runtimeOnly fg.deobf("curse.maven:byg-247560:3485079")

    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
}

mixin {
    add sourceSets.main, 'lootjs.refmap.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : "Lytho",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : "Lytho",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinsConfigs"           : "lootjs.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
