public net.minecraft.loot.conditions.WeatherCheck <init>(Ljava/lang/Boolean;Ljava/lang/Boolean;)V # WeatherCheck
public net.minecraft.loot.conditions.TimeCheck <init>(Ljava/lang/Long;Lnet/minecraft/loot/RandomValueRange;)V # TimeCheck
public net.minecraft.loot.conditions.BlockStateProperty <init>(Lnet/minecraft/block/Block;Lnet/minecraft/advancements/criterion/StatePropertiesPredicate;)V # BlockStateProperty
public net.minecraft.loot.conditions.EntityHasProperty <init>(Lnet/minecraft/advancements/criterion/EntityPredicate;Lnet/minecraft/loot/LootContext$EntityTarget;)V # EntityHasProperty
public net.minecraft.loot.conditions.EntityHasScore <init>(Ljava/util/Map;Lnet/minecraft/loot/LootContext$EntityTarget;)V # EntityHasScore
public net.minecraft.loot.conditions.LocationCheck <init>(Lnet/minecraft/advancements/criterion/LocationPredicate;Lnet/minecraft/util/math/BlockPos;)V # LocationCheck
public net.minecraft.loot.conditions.TableBonus <init>(Lnet/minecraft/enchantment/Enchantment;[F)V # TableBonus
public net.minecraft.loot.conditions.Inverted <init>(Lnet/minecraft/loot/conditions/ILootCondition;)V # Inverted
public net.minecraft.loot.conditions.Alternative <init>([Lnet/minecraft/loot/conditions/ILootCondition;)V # Alternative
public net.minecraft.loot.conditions.DamageSourceProperties <init>(Lnet/minecraft/advancements/criterion/DamageSourcePredicate;)V # DamageSourceProperties

public net.minecraft.advancements.criterion.MinMaxBounds$IntBound <init>(Ljava/lang/Integer;Ljava/lang/Integer;)V # IntBound
public net.minecraft.advancements.criterion.LightPredicate <init>(Lnet/minecraft/advancements/criterion/MinMaxBounds$IntBound;)V # LightPredicate
